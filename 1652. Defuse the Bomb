#If you want to simulate the circular behavior of an array you can just % n.
class Solution:
    def decrypt(self, code: List[int], k: int) -> List[int]:
        n=len(code)
        result=[0]*n
        if k==0:
            return result
            
        if k>0:
            for i in range(n):
                #for example if n=4, i=3 and k=3, you have 3+1 (or 2 or 3)%n and that equals 4%4=0 or 4%5=1 or 4%6=2
                result[i]=sum(code[(i+j)%n]for j in range(1,k+1))
        else:
            for i in range(n):
                result[i]=sum(code[(i-j)%n] for j in range(1,abs(k)+1))

        return result                
                
